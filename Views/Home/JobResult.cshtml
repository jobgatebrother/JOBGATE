@using JOBGATE.Models;
@*<script>
        $(document).ready(function () {
            $('#AdvancedSeach').click(function () {
                if ($('#arrow').hasClass('fa-chevron-left')) {
                    $('#arrow').removeClass('fa-chevron-left');
                    $('#arrow').addClass('fa-chevron-down');
                } else {
                    $('#arrow').addClass('fa-chevron-left');
                    $('#arrow').removeClass('fa-chevron-down');
                }
            });
        });
    </script>*@

<style>
        /*  .bodya {
            font-family: sans-serif;
            font-weight: bold;
            font-size: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 30px;
        }*/

        /*.cont {
            width: 720px;
        }
    */
        .containerz {
            display: flex;
            flex-wrap: wrap;
            justify-content: flex-start;
        }
    .containerx {
        display: flex;
        flex-wrap: wrap;
        justify-content: flex-start;
    }


        .single-item {
            /*width:100%;*/
            height: 150px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: transparent;
            /* margin: 10px;*/
            border-radius: 0px;
            /*  border-bottom:1px solid #808080;*/
            color: #888;
            padding: 10px;
        }

        .pagination {
            padding: 20px;
        }

            .pagination,
            .pagination * {
                -webkit-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
            }

                .pagination a {
                    display: inline-block;
                    padding: 0 10px;
                    cursor: pointer;
                }

                    .pagination a.disabled {
                        opacity: 0.3;
                        pointer-events: none;
                        cursor: not-allowed;
                    }

                    .pagination a.current {
                        background: #f3f3f3;
                    }
</style>
<div class="row " >
    <div class="col-lg-4 col-md-12 col-12">
        <div class="card" style="border-radius:0px; border:none;">
            <div class="card-body">
                <div class="row  mt-2">

                    <div class="col-lg-12 col-md-12 col-12 mt-1">
                        <span class="font-weight-bold text-dark">Location</span>
                        <select class="form-control form-control-sm" id="locationProvi" onchange="disChange();">
                            <option value=" " selected></option>
                            @foreach (CEN_LocationThailand data in (CEN_LocationThailand[])ViewBag.locationPro)
                            {
                                <option value="@data.ProvinceID">@data.ProvinceEN</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="row  mt-2">

                    <div class="col-lg-12 col-md-12 col-12 mt-1">
                        <span class="font-weight-bold text-dark">District</span>
                        <select class="form-control form-control-sm" id="jobResultDistrictId">
                            <option value=" " selected></option>
                            @foreach (CEN_LocationThailand data in (CEN_LocationThailand[])ViewBag.Disti)
                            {
                                <option value="@data.DistrictID">@data.DistrictEN</option>
                            }

                        </select>
                    </div>
                </div>

                <div class="row  mt-2">

                    <div class="col-lg-12 col-md-12 col-12 mt-1">
                        <span class="font-weight-bold text-dark">Job Type</span>
                        <select class="form-control form-control-sm" id="jobResultJobTypeId" onchange="JobfieChange();">
                            <option value=" " selected></option>
                            @foreach (CEN_JobField data in (CEN_JobField[])ViewBag.JobFieldTy)
                            {
                                <option value="@data.JobCategoryID">@data.JobCategoryEN</option>
                            }
                        </select>
                    </div>
                </div>
                <a id="AdvancedSeach" class="nav-link collapsed text-primary text-right" href="#" data-toggle="collapse" data-target="#collapseAdvanced"
                   aria-expanded="true">
                    <i id="arrow" class="fa fa-chevron-left"></i>
                    <span>Advanced Search</span>
                </a>
                <div id="collapseAdvanced" class="collapse">
                    <div class="collapse-inner rounded">
                        <div class="row  mt-2">

                            <div class="col-lg-12 col-md-12 col-12 mt-1">
                                <span class="font-weight-bold text-dark">Industry</span>
                                <select class="form-control form-control-sm" id="jobResultIndustryId">
                                    <option value=" " selected></option>
                                    @foreach (IndustryCodeList data in (IndustryCodeList[])ViewBag.Insdus)
                                    {
                                        <option value="@data.Code">@data.IndustryNameEN</option>
                                    }

                                </select>
                            </div>
                        </div>
                        <div class="row  mt-2">

                            <div class="col-lg-12 col-md-12 col-12 mt-1">
                                <span class="font-weight-bold text-dark">Job Field</span>
                                <select class="form-control form-control-sm" id="jobResultJobFieldId">
                                    <option value=" " selected></option>
                                    @foreach (CEN_JobField data in (CEN_JobField[])ViewBag.JobField)
                                    {
                                        <option value="@data.JobFieldID">@data.JobFieldEN</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="row  mt-2">

                            <div class="col-lg-12 col-md-12 col-12 mt-1">
                                <span class="font-weight-bold text-dark">Salary</span>
                                <div class="row ">
                                    <div class="col-lg-12 col-md-12 col-12 ">
                                        <select class="form-control form-control-sm" id="jobResultSalaryMinId">
                                            <option value="0">0</option>
                                            <option value="5000">5000</option>
                                            <option value="10000">10000</option>
                                            <option value="15000">15000</option>
                                            <option value="20000">20000</option>
                                            <option value="25000">25000</option>
                                            <option value="30000">30000</option>
                                            <option value="35000">35000</option>
                                            <option value="40000">40000</option>
                                            <option value="45000">45000</option>
                                            <option value="50000">50000</option>
                                            <option value="55000">55000</option>
                                            <option value="60000">60000</option>
                                            <option value="65000">65000</option>
                                            <option value="70000">70000</option>
                                            <option value="75000">75000</option>
                                            <option value="80000">80000</option>
                                            <option value="85000">85000</option>
                                            <option value="90000">90000</option>
                                            <option value="95000">95000</option>
                                        </select>
                                    </div>
                                    <div class="col-lg-12 col-md-12 col-12 d-flex justify-content-center">
                                        <div>
                                            ~
                                        </div>

                                    </div>
                                    <div class="col-lg-12 col-md-12 col-12 ">
                                        <select class="form-control form-control-sm" id="jobResultSalaryMaxId">
                                            <option value="Over 100000">Over 100000</option>
                                            <option value="10000">10000</option>
                                            <option value="15000">15000</option>
                                            <option value="20000">20000</option>
                                            <option value="25000">25000</option>
                                            <option value="30000">30000</option>
                                            <option value="35000">35000</option>
                                            <option value="40000">40000</option>
                                            <option value="45000">45000</option>
                                            <option value="50000">50000</option>
                                            <option value="55000">55000</option>
                                            <option value="60000">60000</option>
                                            <option value="65000">65000</option>
                                            <option value="70000">70000</option>
                                            <option value="75000">75000</option>
                                            <option value="80000">80000</option>
                                            <option value="85000">85000</option>
                                            <option value="90000">90000</option>
                                            <option value="95000">95000</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                @*<div class="row  mt-2">

                        <div class="col-lg-12 col-md-12 col-12 mt-1">
                            <span class="font-weight-bold text-dark">Keywords</span>
                            <select class="form-control form-control-sm" id="jobResultKeywordsId">
                                <option value=""></option>
                                @foreach (CEN_LocationThailand data in (CEN_LocationThailand[])ViewBag.locationPro)
                                {
                                    <option value="@data.ProvinceEN">@data.ProvinceEN</option>
                                }
                            </select>
                        </div>
                    </div>*@

                <div class="d-flex justify-content-center mt-5">

                    <div class="col-lg-10 col-md-10 col-12">
                        <button type="button" class="btn btn-primary btn-block" onclick=" SearchJobResult();"><i class="fa fa-search"></i>&nbsp;Search</button>
                    </div>

                </div>
                <hr />
                <div class="mt-5">

                    <img src="~/Images/Advertising.jpg" class="card-img mt-5" style="height:200px;" />
                    <img src="~/Images/Advertising.jpg" class="card-img mt-5" style="height:200px;" />
                    <img src="~/Images/Advertising.jpg" class="card-img mt-5" style="height:200px;" />
                </div>
            </div>


        </div>
    </div>
    <div class="col-lg-8 col-md-12 col-12 ">
        <div class="card " style="border-radius:0px;">
            <div class="card-header">
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-12">
                        <div class="justify-content-start" id="textConHead">
                            <h4 class="font-weight-bold text-dark">Found @ViewBag.Pocount Positions</h4>
                        </div>
                    </div>

                    <div class="col-lg-6 col-md-6 col-12">
                        <div class="row justify-content-end">
                            <h5 class="font-weight-bold text-dark mt-1">Sort by</h5>
                            <select class="form-control ml-2" style="width:200px;">
                                <option>Relevance</option>
                                <option>Lastest</option>
                                <option>Salary(High -> Low)</option>
                                <option>Salary(Low -> High)</option>
                            </select>
                        </div>
                    </div>
                </div>


            </div>


            <div class="card-body" id="dee">

                <div class="row containerz list-group list-group-flush" id="dif">

                    @foreach (CPN_JobPosting data in (CPN_JobPosting[])ViewBag.jobposting)
                    {
                        <div class="single-item col-lg-12 col-md-12 col-12 ">


                            <a href="#" class="list-group-item list-group-item-action">

                                <div class="row">
                                    <div class="col-lg-10 col-md-10 col-10">
                                        <div class="">
                                            <h4 class="font-weight-bold">@data.JobTitle</h4>
                                        </div>
                                        <div>
                                            <h6 class="font-weight-bold text-primary" href="">@data.CompanyName</h6>

                                        </div>
                                        <div class="row">
                                            <div class="col-lg-5 col-md-5 col-12">
                                                <i class="fa fa-map-marker-alt text-primary mt-1"></i>
                                                <label class="ml-2">@data.Province</label>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-12">
                                                <i class="fa fa-money-bill-alt text-primary mt-1"></i>
                                                <label class="ml-2">@data.SalaryMin - @data.SalaryMax </label>
                                            </div>
                                            <div class="col-lg-3 col-md-3 col-12">
                                                <i class="fa fa-clock text-primary mt-1"></i>
                                                <label class="ml-2">@data.JobType</label>
                                            </div>
                                        </div>


                                    </div>
                                    <div class="col-lg-2 col-md-2 col-12 text-center ">
                                        <div class="row justify-content-lg-end justify-content-md-end justify-content-sm-end justify-content-end">
                                            <div class="">
                                                <img src="~/Images/Logo 1.png" class="card-img" style="height:auto;width:100%; max-width:65px; min-width:30px; " />
                                                <h6 class="font-weight-bold">@data.UpdateDate</h6>
                                            </div>
                                        </div>


                                    </div>
                                </div>

                            </a>


                        </div>
                    }

                </div>

            </div>


        </div>




    </div>

    <div class="col-12 d-flex justify-content-end">


        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#staticBackdrop" style="display:none;" id="gO"></button>

    </div>
    <div class="modal fade" id="staticBackdrop" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog" style="background-color:transparent;   position: absolute;top:0;bottom: 0 ; left:0;right:0;  border:none; display:flex;flex-wrap:wrap;align-items:center;justify-content:center;">
            <div class="modal-content" style="background-color:transparent;border:none;">
                <div class="d-flex justify-content-center " style="background-color:transparent;border:none;">
                    <div class="spinner-grow text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <div class="spinner-grow text-secondary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <div class="spinner-grow text-success" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <div class="spinner-grow text-danger" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <div class="spinner-grow text-warning" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <div class="spinner-grow text-info" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <div class="spinner-grow text-light" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                    <div class="spinner-grow text-dark" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    var item, div, divd;

    function one() {

        $("#dee").empty();
        divd = "<div class='row containerx list-group list-group-flush' id='dif'> </div>";

        $("#dee").append(divd)

    }



    function SearchJobResult() {

        var locationProvi = $("#locationProvi").val();
        var jobResultDistrictId = $("#jobResultDistrictId").val();
        var jobResultJobFieldId = $("#jobResultJobFieldId").val();
        var jobResultIndustryId = $("#jobResultIndustryId").val();
        var jobResultJobTypeId = $("#jobResultJobTypeId").val();
        var jobResultSalaryMinId = $("#jobResultSalaryMinId").val();
        var jobResultSalaryMaxId = $("#jobResultSalaryMaxId").val();
        //var jobResultKeywordsId = $("#jobResultKeywordsId").val();

        var fileData = new FormData();





        fileData.append('jobResultDistrictId', jobResultDistrictId);
        fileData.append('jobResultJobFieldId', jobResultJobFieldId);
        fileData.append('jobResultIndustryId', jobResultIndustryId);
        fileData.append('jobResultJobTypeId', jobResultJobTypeId);
        fileData.append('jobResultSalaryMinId', jobResultSalaryMinId);
        fileData.append('jobResultSalaryMaxId', jobResultSalaryMaxId);
        //fileData.append('jobResultKeywordsId', jobResultKeywordsId);
        $("#gO").click();
        $("#textConHead").empty();
        one();

        //alert(jobResultJobFieldId);

        $.ajax({
            url: '/Home/JobResult',
            type: "POST",
            contentType: false,
            processData: false,
            data: fileData,
            success:  function (result) {

                $("#staticBackdrop").modal('hide');
                var jsonpa = JSON.parse(result);

                if (jsonpa.length == 0) {

                    div = "<h4 class='font-weight-bold text-dark text-align-center'>No Matching Job</h4>";   
                    $("#dif").append(div);
                }

             for (var i = 0; i < jsonpa.length; i++) {

                    div = "<div class='single-item col-lg-12 col-md-12 col-12'>" +


                        " <a href='#' class='list-group-item list-group-item-action'>" +

                        "  <div class='row'>" +
                        "  <div class='col-lg-10 col-md-10 col-10'>" +
                        " <div class=''>" +
                        " <h4 class='font-weight-bold'>" + jsonpa[i].JobTitle + "</h4>" +
                        "   </div>" +
                        "  <div>" +
                        "  <h6 class='font-weight-bold text-primary' href=''>" + jsonpa[i].CompanyName + "</h6>" +

                        " </div>" +
                        "  <div class='row'>" +
                        "<div class='col-lg-5 col-md-5 col-12'>" +
                        " <i class='fa fa-map-marker-alt text-primary mt-1'></i>" +
                     "  <label class='ml-2'>" +jsonpa[i].Province+"</label>" +
                        " </div>" +
                        "  <div class='col-lg-3 col-md-3 col-12'>" +
                        "<i class='fa fa-money-bill-alt text-primary mt-1'></i>" +
                        " <label class='ml-2'>" + jsonpa[i].SalaryMin + "-" + jsonpa[i].SalaryMax + " </label>" +
                        "  </div>" +
                        " <div class='col-lg-3 col-md-3 col-12'>" +
                        "    <i class='fa fa-clock text-primary mt-1'></i>" +
                        "   <label class='ml-2'>" + jsonpa[i].JobType + "</label>" +
                        " </div>" +
                        " </div>" +


                        "</div>" +
                        "<div class='col-lg-2 col-md-2 col-12 text-center '>" +
                        "    <div class='row justify-content-lg-end justify-content-md-end justify-content-sm-end justify-content-end'>" +
                        "        <div class=''>" +
                        "            <img src='~/Images/Logo 1.png' class='card-img' style='height:auto;width:100%; max-width:65px; min-width:30px; ' />" +
                        "            <h6 class='font-weight-bold'>" + jsonpa[i].UpdateDate + "</h6>" +
                        "        </div>" +
                        "    </div>" +


                        "  </div>" +
                        "  </div>" +

                        " </a>";





                    div += "</div>";
                    $("#dif").append(div);

                }

                
                text = "<h4 class='font-weight-bold text-dark'>Found " + jsonpa.length + " Positions</h4>";
                $("#textConHead").append(text);
                (function ($) {
                    var pagify = {
                        items: {},
                        container: null,
                        totalPages: 1,
                        perPage: 3,
                        currentPage: 0,
                        createNavigation: function () {
                            this.totalPages = Math.ceil(this.items.length / this.perPage);

                            $(".pagination", this.container.parent()).remove();
                            var pagination = $('<div class="pagination"></div>').append(
                                '<a class="nav prev disabled" data-next="false"><</a>'
                            );

                            for (var i = 0; i < this.totalPages; i++) {
                                var pageElClass = "page";
                                if (!i) pageElClass = "page current";
                                var pageEl =
                                    '<a class="' +
                                    pageElClass +
                                    '" data-page="' +
                                    (i + 1) +
                                    '">' +
                                    (i + 1) +
                                    "</a>";
                                pagination.append(pageEl);
                            }
                            pagination.append('<a class="nav next" data-next="true">></a>');

                            this.container.after(pagination);

                            var that = this;
                            $("body").off("click", ".nav");
                            this.navigator = $("body").on("click", ".nav", function () {
                                var el = $(this);
                                that.navigate(el.data("next"));
                            });

                            $("body").off("click", ".page");
                            this.pageNavigator = $("body").on("click", ".page", function () {
                                var el = $(this);
                                that.goToPage(el.data("page"));
                            });
                        },
                        navigate: function (next) {
                            // default perPage to 5
                            if (isNaN(next) || next === undefined) {
                                next = true;
                            }
                            $(".pagination .nav").removeClass("disabled");
                            if (next) {
                                this.currentPage++;
                                if (this.currentPage > this.totalPages - 1)
                                    this.currentPage = this.totalPages - 1;
                                if (this.currentPage == this.totalPages - 1)
                                    $(".pagination .nav.next").addClass("disabled");
                            } else {
                                this.currentPage--;
                                if (this.currentPage < 0) this.currentPage = 0;
                                if (this.currentPage == 0)
                                    $(".pagination .nav.prev").addClass("disabled");
                            }

                            this.showItems();
                        },
                        updateNavigation: function () {
                            var pages = $(".pagination .page");
                            pages.removeClass("current");
                            $(
                                '.pagination .page[data-page="' + (this.currentPage + 1) + '"]'
                            ).addClass("current");
                        },
                        goToPage: function (page) {
                            this.currentPage = page - 1;

                            $(".pagination .nav").removeClass("disabled");
                            if (this.currentPage == this.totalPages - 1)
                                $(".pagination .nav.next").addClass("disabled");

                            if (this.currentPage == 0)
                                $(".pagination .nav.prev").addClass("disabled");
                            this.showItems();
                        },
                        showItems: function () {
                            this.items.hide();
                            var base = this.perPage * this.currentPage;
                            this.items.slice(base, base + this.perPage).show();

                            this.updateNavigation();
                        },
                        init: function (container, items, perPage) {
                            this.container = container;
                            this.currentPage = 0;
                            this.totalPages = 1;
                            this.perPage = perPage;
                            this.items = items;
                            this.createNavigation();
                            this.showItems();
                        }
                    };

                    // stuff it all into a jQuery method!
                    $.fn.pagify = function (perPage, itemSelector) {
                        var el = $(this);
                        var items = $(itemSelector, el);

                        // default perPage to 5
                        if (isNaN(perPage) || perPage === undefined) {
                            perPage = 3;
                        }

                        // don't fire if fewer items than perPage
                        if (items.length <= perPage) {
                            return true;
                        }

                        pagify.init(el, items, perPage);
                    };
                })(jQuery);

                $(".containerx").pagify(8, ".single-item");
            },

         
        });

       
    }

   

</script>
<script>

    function disChange() {

        var locationProvi = $("#locationProvi").val();
        var jobResultJobTypeId = $("#jobResultJobTypeId").val();
        var fileData = new FormData();

        fileData.append('locationProvi', locationProvi);
        fileData.append('jobResultJobTypeId', jobResultJobTypeId);

        $.ajax({
            url: '/Home/Home',
            type: "POST",
            contentType: false,
            processData: false,
            data: fileData,
            success: function (result) {

                $("#jobResultDistrictId").empty();
                var item, option;

                var jsonpa = JSON.parse(result);

                for (var i = 0; i < jsonpa.length; i++) {

                    option = "<option selected='selected' value='" + jsonpa[i].DistrictID + "'>" + jsonpa[i].DistrictEN + "</option>";

                    $("#jobResultDistrictId").append(option);
                }



            },

        });
    }
</script>
<script>

    function JobfieChange() {

        var jobResultJobTypeId = $("#jobResultJobTypeId").val();
        var fileData = new FormData();

        fileData.append('jobResultJobTypeId', jobResultJobTypeId);

        $.ajax({
            url: '/Home/changeFie',
            type: "POST",
            contentType: false,
            processData: false,
            data: fileData,
            success: function (result) {

                $("#jobResultJobFieldId").empty();
                var item, option;

                var jsonpa = JSON.parse(result);

                for (var i = 0; i < jsonpa.length; i++) {

                    option = "<option selected='selected' value='" + jsonpa[i].JobFieldID + "'>" + jsonpa[i].JobFieldEN + "</option>";

                    $("#jobResultJobFieldId").append(option);
                }
            },

        });
    }
</script>
<script>
    (function ($) {
        var pagify = {
            items: {},
            container: null,
            totalPages: 1,
            perPage: 3,
            currentPage: 0,
            createNavigation: function () {
                this.totalPages = Math.ceil(this.items.length / this.perPage);

                $(".pagination", this.container.parent()).remove();
                var pagination = $('<div class="pagination"></div>').append(
                    '<a class="nav prev disabled" data-next="false"><</a>'
                );

                for (var i = 0; i < this.totalPages; i++) {
                    var pageElClass = "page";
                    if (!i) pageElClass = "page current";
                    var pageEl =
                        '<a class="' +
                        pageElClass +
                        '" data-page="' +
                        (i + 1) +
                        '">' +
                        (i + 1) +
                        "</a>";
                    pagination.append(pageEl);
                }
                pagination.append('<a class="nav next" data-next="true">></a>');

                this.container.after(pagination);

                var that = this;
                $("body").off("click", ".nav");
                this.navigator = $("body").on("click", ".nav", function () {
                    var el = $(this);
                    that.navigate(el.data("next"));
                });

                $("body").off("click", ".page");
                this.pageNavigator = $("body").on("click", ".page", function () {
                    var el = $(this);
                    that.goToPage(el.data("page"));
                });
            },
            navigate: function (next) {
                // default perPage to 5
                if (isNaN(next) || next === undefined) {
                    next = true;
                }
                $(".pagination .nav").removeClass("disabled");
                if (next) {
                    this.currentPage++;
                    if (this.currentPage > this.totalPages - 1)
                        this.currentPage = this.totalPages - 1;
                    if (this.currentPage == this.totalPages - 1)
                        $(".pagination .nav.next").addClass("disabled");
                } else {
                    this.currentPage--;
                    if (this.currentPage < 0) this.currentPage = 0;
                    if (this.currentPage == 0)
                        $(".pagination .nav.prev").addClass("disabled");
                }

                this.showItems();
            },
            updateNavigation: function () {
                var pages = $(".pagination .page");
                pages.removeClass("current");
                $(
                    '.pagination .page[data-page="' + (this.currentPage + 1) + '"]'
                ).addClass("current");
            },
            goToPage: function (page) {
                this.currentPage = page - 1;

                $(".pagination .nav").removeClass("disabled");
                if (this.currentPage == this.totalPages - 1)
                    $(".pagination .nav.next").addClass("disabled");

                if (this.currentPage == 0)
                    $(".pagination .nav.prev").addClass("disabled");
                this.showItems();
            },
            showItems: function () {
                this.items.hide();
                var base = this.perPage * this.currentPage;
                this.items.slice(base, base + this.perPage).show();

                this.updateNavigation();
            },
            init: function (container, items, perPage) {
                this.container = container;
                this.currentPage = 0;
                this.totalPages = 1;
                this.perPage = perPage;
                this.items = items;
                this.createNavigation();
                this.showItems();
            }
        };

        // stuff it all into a jQuery method!
        $.fn.pagify = function (perPage, itemSelector) {
            var el = $(this);
            var items = $(itemSelector, el);

            // default perPage to 5
            if (isNaN(perPage) || perPage === undefined) {
                perPage = 3;
            }

            // don't fire if fewer items than perPage
            if (items.length <= perPage) {
                return true;
            }

            pagify.init(el, items, perPage);
        };
    })(jQuery);

    $(".containerz").pagify(8, ".single-item");


</script>

<script>
    
        (function ($) {
            var pagify = {
                items: {},
                container: null,
                totalPages: 1,
                perPage: 3,
                currentPage: 0,
                createNavigation: function () {
                    this.totalPages = Math.ceil(this.items.length / this.perPage);

                    $(".pagination", this.container.parent()).remove();
                    var pagination = $('<div class="pagination"></div>').append(
                        '<a class="nav prev disabled" data-next="false"><</a>'
                    );

                    for (var i = 0; i < this.totalPages; i++) {
                        var pageElClass = "page";
                        if (!i) pageElClass = "page current";
                        var pageEl =
                            '<a class="' +
                            pageElClass +
                            '" data-page="' +
                            (i + 1) +
                            '">' +
                            (i + 1) +
                            "</a>";
                        pagination.append(pageEl);
                    }
                    pagination.append('<a class="nav next" data-next="true">></a>');

                    this.container.after(pagination);

                    var that = this;
                    $("body").off("click", ".nav");
                    this.navigator = $("body").on("click", ".nav", function () {
                        var el = $(this);
                        that.navigate(el.data("next"));
                    });

                    $("body").off("click", ".page");
                    this.pageNavigator = $("body").on("click", ".page", function () {
                        var el = $(this);
                        that.goToPage(el.data("page"));
                    });
                },
                navigate: function (next) {
                    // default perPage to 5
                    if (isNaN(next) || next === undefined) {
                        next = true;
                    }
                    $(".pagination .nav").removeClass("disabled");
                    if (next) {
                        this.currentPage++;
                        if (this.currentPage > this.totalPages - 1)
                            this.currentPage = this.totalPages - 1;
                        if (this.currentPage == this.totalPages - 1)
                            $(".pagination .nav.next").addClass("disabled");
                    } else {
                        this.currentPage--;
                        if (this.currentPage < 0) this.currentPage = 0;
                        if (this.currentPage == 0)
                            $(".pagination .nav.prev").addClass("disabled");
                    }

                    this.showItems();
                },
                updateNavigation: function () {
                    var pages = $(".pagination .page");
                    pages.removeClass("current");
                    $(
                        '.pagination .page[data-page="' + (this.currentPage + 1) + '"]'
                    ).addClass("current");
                },
                goToPage: function (page) {
                    this.currentPage = page - 1;

                    $(".pagination .nav").removeClass("disabled");
                    if (this.currentPage == this.totalPages - 1)
                        $(".pagination .nav.next").addClass("disabled");

                    if (this.currentPage == 0)
                        $(".pagination .nav.prev").addClass("disabled");
                    this.showItems();
                },
                showItems: function () {
                    this.items.hide();
                    var base = this.perPage * this.currentPage;
                    this.items.slice(base, base + this.perPage).show();

                    this.updateNavigation();
                },
                init: function (container, items, perPage) {
                    this.container = container;
                    this.currentPage = 0;
                    this.totalPages = 1;
                    this.perPage = perPage;
                    this.items = items;
                    this.createNavigation();
                    this.showItems();
                }
            };

            // stuff it all into a jQuery method!
            $.fn.pagify = function (perPage, itemSelector) {
                var el = $(this);
                var items = $(itemSelector, el);

                // default perPage to 5
                if (isNaN(perPage) || perPage === undefined) {
                    perPage = 3;
                }

                // don't fire if fewer items than perPage
                if (items.length <= perPage) {
                    return true;
                }

                pagify.init(el, items, perPage);
            };
        })(jQuery);

        $(".containerx").pagify(8, ".single-item");
    
</script>
<script>
        @*function SearchJobResult() {

            var locationProvi = $("#locationProvi").val();
            var jobResultDistrictId  = $("#jobResultDistrictId").val();
            var jobResultJobFieldId  = $("#jobResultJobFieldId").val();
            var jobResultIndustryId  = $("#jobResultIndustryId").val();
            var jobResultJobTypeId   = $("#jobResultJobTypeId").val();
            var jobResultSalaryMinId = $("#jobResultSalaryMinId").val();
            var jobResultSalaryMaxId = $("#jobResultSalaryMaxId").val();
            var jobResultKeywordsId  = $("#jobResultKeywordsId").val();

            var fileData = new FormData();

            fileData.append('locationProvi', locationProvi);
            fileData.append('jobResultDistrictId' , jobResultDistrictId);
            fileData.append('jobResultJobFieldId' , jobResultJobFieldId);
            fileData.append('jobResultIndustryId' , jobResultIndustryId);
            fileData.append('jobResultJobTypeId'  , jobResultJobTypeId);
            fileData.append('jobResultSalaryMinId', jobResultSalaryMinId);
            fileData.append('jobResultSalaryMaxId', jobResultSalaryMaxId);
            fileData.append('jobResultKeywordsId', jobResultKeywordsId);


            alert(jobResultLocationId, jobResultDistrictId, jobResultJobFieldId);
            $.ajax({
                url: '/Home/JobResult',
                type: "POST",
                contentType: false,
                processData: false,
                data: fileData,
                success: function (result) {
                    $("#cradListShow").empty();
                    var item = '', div;
                    $.each(result, function (i, item) {
                        div =  " <a href='#' class='list-group-item list-group-item-action'>"+

                                "<div class='row'>"+
                                "<div class='col-lg-10 col-md-10 col-10'>"+
                                "<div class=''>"+
                                "<h4 class='font-weight-bold'>Node. JS Programmer</h4>"+
                                "</div ><div>"+
                                "<h6 class='font-weight-bold text-primary' href=''>Company Name</h6>"+
                                "</div> "+
                                "<div class='row' >"+
                                "<div class='col-lg-5 col-md-5 col-12' > " +
                                "<i class='fa fa-map-marker-alt text-primary mt-1'></i>"+
                                "<label class='ml-2'>Bang Kapi,Bangkok</label>"+
                                "</div>"+
                                "<div class='col-lg-3 col-md-3 col-12'>"+
                                "<i class='fa fa-money-bill-alt text-primary mt-1'></i>"+
                                "<label class='ml-2'>50,000</label>"+
                                "</div>"+
                                "<div class='col-lg-3 col-md-3 col-12'>"+
                                "<i class='fa fa-clock text-primary mt-1'></i>"+
                                "<label class='ml-2'>Full-Time</label>" +
                                "</div>" +
                                "</div>" +
                                "</div>" +
                                "<div class='col-lg-2 col-md-2 col-12 text-center'>" +
                                "<div class='row justify-content-lg-end justify-content-md-end justify-content-sm-end justify-content-end'>" +
                                "<div class=''>" +
                                "<img src='~/Images/Logo 1.png' class='card-img' style='height:auto;width:100%; max-width:65px; min-width:30px; '/>" +
                                "<h6 class='font-weight-bold'>@DateTime.UtcNow.ToString("d MMM yyyy", new System.Globalization.CultureInfo("en-US"))</h6>" +
                                "</div>" +
                                "</div>" +
                                "</div>" +
                                "</div>";
                         div += "</a>" ;
                        $("#cradListShow").append(div);
                    });
                },
                error: function (err) {
                }
            });
        }*@
</script>
